/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.7
 */

#include "sipAPIlibqt_gui_cpp_sip.h"

#line 7 "plugin_context.sip"
#include <qt_gui_cpp/plugin_context.h>
#line 12 "/opt/workspace/build/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppPluginContext.cpp"

#line 28 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 16 "/opt/workspace/build/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppPluginContext.cpp"
#line 36 "/usr/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 19 "/opt/workspace/build/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppPluginContext.cpp"
#line 28 "/usr/share/sip/PyQt5/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 22 "/opt/workspace/build/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppPluginContext.cpp"


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_serialNumber(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_serialNumber(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->serialNumber();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_serialNumber, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_argv(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_argv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->argv());

            return sipConvertFromNewType(sipRes,sipType_QStringList,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_argv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_addWidget(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_addWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp, sipType_QWidget, &a0))
        {
            sipCpp->addWidget(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_addWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_removeWidget(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_removeWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp, sipType_QWidget, &a0))
        {
            sipCpp->removeWidget(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_removeWidget, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_closePlugin(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_closePlugin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp))
        {
            sipCpp->closePlugin();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_closePlugin, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_qt_gui_cpp_PluginContext_reloadPlugin(PyObject *, PyObject *);}
static PyObject *meth_qt_gui_cpp_PluginContext_reloadPlugin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qt_gui_cpp::PluginContext *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_qt_gui_cpp_PluginContext, &sipCpp))
        {
            sipCpp->reloadPlugin();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_PluginContext, sipName_reloadPlugin, NULL);

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_qt_gui_cpp_PluginContext(void *, int);}
static void release_qt_gui_cpp_PluginContext(void *sipCppV, int)
{
    delete reinterpret_cast< ::qt_gui_cpp::PluginContext *>(sipCppV);
}


extern "C" {static void dealloc_qt_gui_cpp_PluginContext(sipSimpleWrapper *);}
static void dealloc_qt_gui_cpp_PluginContext(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_qt_gui_cpp_PluginContext(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_qt_gui_cpp_PluginContext(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_qt_gui_cpp_PluginContext(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::qt_gui_cpp::PluginContext *sipCpp = 0;

    {
         ::QObject* a0;
        int a1;
        const  ::QStringList* a2;
        int a2State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J8iJ1", sipType_QObject, &a0, &a1, sipType_QStringList,&a2, &a2State))
        {
            sipCpp = new  ::qt_gui_cpp::PluginContext(a0,a1,*a2);
            sipReleaseType(const_cast< ::QStringList *>(a2),sipType_QStringList,a2State);

            return sipCpp;
        }
    }

    {
        const  ::qt_gui_cpp::PluginContext* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_qt_gui_cpp_PluginContext, &a0))
        {
            sipCpp = new  ::qt_gui_cpp::PluginContext(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_qt_gui_cpp_PluginContext[] = {
    {SIP_MLNAME_CAST(sipName_addWidget), meth_qt_gui_cpp_PluginContext_addWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_argv), meth_qt_gui_cpp_PluginContext_argv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_closePlugin), meth_qt_gui_cpp_PluginContext_closePlugin, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_reloadPlugin), meth_qt_gui_cpp_PluginContext_reloadPlugin, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_removeWidget), meth_qt_gui_cpp_PluginContext_removeWidget, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_serialNumber), meth_qt_gui_cpp_PluginContext_serialNumber, METH_VARARGS, NULL}
};


static pyqt5ClassPluginDef plugin_qt_gui_cpp_PluginContext = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_PluginContext = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_qt_gui_cpp__PluginContext,
        {0},
        &plugin_qt_gui_cpp_PluginContext
    },
    {
        sipNameNr_PluginContext,
        {3, 255, 0},
        6, methods_qt_gui_cpp_PluginContext,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_type_qt_gui_cpp_PluginContext,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_qt_gui_cpp_PluginContext,
    0,
    0,
    0,
    release_qt_gui_cpp_PluginContext,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
